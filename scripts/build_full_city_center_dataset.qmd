---
title: "build_full_city_center_dataset"
format: html
editor: visual
---

```{r}

library(dplyr)
library(tidyr)
library(here)
library(sf)
library(readr)
library(ggplot2)
library(ggspatial)
library(leaflet)
library(centr)

source(here("scripts/utils.R"))

i_am("scripts/build_full_city_center_dataset.qmd")

```

##  This excel file comes from economist Matt Holian
[Download here](https://mattholian.blogspot.com/2019/02/where-is-citys-center-on-recent-use-of.html)

It contains City Center estimates by:
- ArcGIS
- Google Earth
- City Hall
- Central Business District
- US Census Gazetteer

```{r}

dta_raw <- readxl::read_excel(
  here("data/geocode_comparison_v5.xlsx"),
  sheet = "copy_of_merged_data2"
)

```

```{r}

dta_clean <- dta_raw %>%
  # Rename for string matching
  rename(arcgis_lon = arcgis_long) %>%
  pivot_longer(
    cols = ends_with("lat"),
    names_to = "definition_lat",
    values_to = "lat"
  ) %>%
  pivot_longer(
    cols = ends_with("lon"),
    names_to = "definition_lon",
    values_to = "lon"
  ) %>%
  mutate(
    # Lon cleaning
    definition_lon = stringr::str_replace_all(definition_lon, "Lon", ""),
    definition_lon = stringr::str_replace_all(definition_lon, "lon", ""),
    # Lat cleaning
    definition_lat = stringr::str_replace_all(definition_lat, "Lat", ""),
    definition_lat = stringr::str_replace_all(definition_lat, "lat", "")
  ) %>%
  # The second pivot longer makes excess rows, remove them
  # by filtering to only matching definitions
  filter(definition_lon == definition_lat) %>%
  mutate(
    definition = case_when(
      definition_lon == "GoogleEarth" ~ "Google Earth",
      definition_lon == "CityHall" ~ "City Hall",
      definition_lon == "Gaz" ~ "Gazetteer",
      definition_lon == "Cen82" ~ "Central Business District",
      definition_lon == "arcgis_" ~ "ArcGIS",
      TRUE ~ definition_lon
    ),
    # Clean up place geoid
    geoid_pl = stringr::str_pad(`unique place code`, 7, side = "left", pad = "0")
  )

```

## Calculate population centers for the top 30 MSAs

```{r}

top_us_cities_simple <- dta_clean %>%
  select(CBSA_name, CBSA_code, PrincipleCity, PrincipleCityStateFIPS, geoid_pl, Pop10) %>%
  distinct() %>%
  slice_max(order_by = Pop10, n = 30)

top_us_cities_cbsa_codes <- top_us_cities_simple %>%
  pull(CBSA_code)

top_us_cities <- dta_clean %>%
  filter(CBSA_code %in% top_us_cities_cbsa_codes)

```


## Building height data by block group
[Download here](https://www.usgs.gov/data/us-national-categorical-mapping-building-heights-block-group-shuttle-radar-topography-mission)

```{r}

# Read in NASA building heights data by block group
building_heights_dta <- readr::read_csv(here("data/building_heights.csv"))

```

```{r}

# Append building height and population definitions 
# To the pre-existing data from Matt Holian
dta_complete <- top_us_cities

for (i in 1:nrow(top_us_cities_simple)) {
  
  print(paste("Calculating for", top_us_cities_simple$PrincipleCity[i]))
  
  pop_weighted_center <- get_pop_center(
    top_us_cities_simple$PrincipleCityStateFIPS[i],
    top_us_cities_simple$geoid_pl[i]
  )

  pop_center_row <- dta_clean %>%
    # Take an existing row and overwrite it with
    # Population center estimate
    filter(CBSA_code == top_us_cities_simple$CBSA_code[i]) %>%
    filter(definition == "Google Earth") %>%
    mutate(
      # Update definition name
      definition_lat = "Population center",
      definition_lon = "Population center",
      definition = "Population center",
      # Update lat and lon values
      lat = pop_weighted_center %>% pull(lat) %>% nth(1),
      lon = pop_weighted_center %>% pull(lon) %>% nth(1)
    )

  height_center <- get_height_center(
    building_heights_dta,
    top_us_cities_simple$PrincipleCityStateFIPS[i],
    top_us_cities_simple$geoid_pl[i]
  )

  height_center_row <- dta_clean %>%
    # Take an existing row and overwrite it
    filter(CBSA_code == top_us_cities_simple$CBSA_code[i]) %>%
    filter(definition == "Google Earth") %>%
    mutate(
      # Update definition name
      definition_lat = "Building height center",
      definition_lon = "Building height center",
      definition = "Building height center",
      # Update lat and lon values
      lat = height_center %>% pull(lat) %>% nth(1),
      lon = height_center %>% pull(lon) %>% nth(1)
    )
  
  ## Combine them all together!
  dta_complete <- bind_rows(
    dta_complete,
    pop_center_row
    ) %>%
    bind_rows(
      .,
      height_center_row
    )
  
}

readr::write_csv(dta_complete, here("data/city_centers_tidy_v01.csv"))

```


## Useful Leaflet map for testing

```{r, eval=FALSE}

dta_complete %>%
  filter(PrincipleCity == "New York city") %>%
  filter(definition == "Population center") %>%
  leaflet() %>%
  addProviderTiles(providers$OpenStreetMap) %>% 
  addCircleMarkers(
    lng = ~lon,
    lat = ~lat,
    radius = 6,
    color = "red",
    stroke = FALSE,
    fillOpacity = 0.8
  ) %>%
  addScaleBar(position = "bottomleft") %>%
  addLegend("bottomright", colors = "red", labels = "City Center") %>%
  addControl("<strong>City Centers</strong>", position = "topright")

```
